name: Release CI
on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  publish:
    name: Check code and release package
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Restaurar cache do Deno
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/deno
          key: deno-${{ runner.os }}-${{ hashFiles('**/deno.lock') }}
          restore-keys: |
            deno-${{ runner.os }}-

      - name: Baixar dependÃªncias do Deno
        run: deno cache mod.ts

      - name: Verify formatting
        run: deno fmt --check
        continue-on-error: true

      - name: Run linter
        run: deno lint
        continue-on-error: true

      - name: Run tests and coverage
        run: deno test --coverage=coverage test.ts

      - name: Create coverage report
        run: deno coverage coverage --lcov > coverage.lcov
        continue-on-error: true
      
      - name: Upload coverage to Codecov
        uses: coverallsapp/github-action@master
        with:
          path-to-lcov: ./coverage.lcov
          github-token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Clean coverage report before publish
        run: rm -rf coverage*

      - name: Check if deno.json version was increased
        if: github.event_name == 'pull_request'
        run: |
          git fetch origin main:main
          PREVIOUS_VERSION=$(jq -r '.version' deno.json)
          PREVIOUS_VERSION_MAIN=$(git show main:deno.json | jq -r '.version')
          if [ "$PREVIOUS_VERSION" == "$PREVIOUS_VERSION_MAIN" ]; then
            echo "Version was not increased. Failing the workflow."
            exit 1
          fi

      - name: Publish package to JSR (Deno is published by tags webhook)
        if: github.event_name == 'push'
        run: deno publish
